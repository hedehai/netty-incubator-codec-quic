# ----------------------------------------------------------------------------
# Copyright 2021 The Netty Project
#
# The Netty Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------
name: Build project

on:
  push:
    branches: [ main ]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=240

jobs:
  
  build-windows:
    runs-on: windows-2019
    name: windows-x86_64
    env:
      # Let's limit the amount of ram that is used to unpack rustup as we saw
      # failures sometimes due the fact that not enough memory could be reserved.
      RUSTUP_UNPACK_RAM: 134217728  # Use 128 MiB
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
          architecture: x86

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: i686-pc-windows-msvc
          override: true

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          msbuild-architecture: x86

      - name: Configuring Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - name: Install tools
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install ninja nasm

      # Cache .m2/repository
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: windows-x86-maven-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            windows-x86-maven-cache-

      - name: Build project
        run: ./mvnw.cmd -B -ntp --file pom.xml clean package

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: build-windows-target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log

 
